WealthEval = {
Name = "WealthEvaluator",
Author = "Rhyono",
Version = "1.46",
SettingsVersion = "1.10"}

local WE = WealthEval

local LAM = LibAddonMenu2

WE.guilds = {[1]={"?",0},[2]={"?",0},[3]={"?",0},[4]={"?",0},[5]={"?",0}}

--homes houseID = owned,furniture value
WE.Defaults = {
['homes']={},['autofurnituresum']=true,['stolenwarning']=true,['unknownwarning']=true,['apval']=0,['crownsval']=0,['telvarval']=0,['voucherval']=0,['includemode']="All",['includeguilds']=true,['includeworn']=true,['includebag']=true,['includebank']=true,['includehousebank']=true,['includecraftbag']=true,['includebaggold']=true,['includebankgold']=true,['includecrowns']=false,['includetelvar']=false,['includebanktelvar']=false,['includeap']=false,['includevoucher']=false,['includemotifknowledge']=false,['includecookknowledge']=false,['includefurnknowledge']=false,['includehousecost']=false,['includefurnval']=false,['includebankspace']=false}

WE.styles = { -- type, achievement id, first motif id, visual id
    [ 1] = {1,1025,16425}, -- Breton
    [ 2] = {1,1025,16427}, -- Redguard
    [ 3] = {1,1025,16426}, -- Orc
    [ 4] = {1,1025,27245}, -- Dark Elf
    [ 5] = {1,1025,27244}, -- Nord
    [ 6] = {1,1025,27246}, -- Argonian
    [ 7] = {1,1025,16424}, -- High Elf
    [ 8] = {1,1025,16428}, -- Wood Elf
    [ 9] = {1,1025,44698}, -- Khajiit
    [11] = {2,1423,74556}, -- Thieves Guild
    [12] = {2,1661,82055}, -- Dark Brotherhood
    [13] = {2,1412,71567}, -- Malacath
    [14] = {2,1144,57573}, -- Dwemer
    [15] = {1,1025,51638}, -- Ancient Elf
    [16] = {2,1660,82088}, -- Order of the Hour 
    [17] = {1,1025,51565}, -- Barbaric
    [19] = {1,1025,51345}, -- Primal
    [20] = {1,1025,51688}, -- Daedric
    [21] = {2,1411,71551}, -- Trinimac
    [22] = {2,1341,69528}, -- Ancient Orc
    [23] = {2,1416,71705}, -- Daggerfall Covenant
    [24] = {2,1414,71721}, -- Ebonheart Pact
    [25] = {2,1415,71689}, -- Aldmeri Dominion
    [26] = {2,1348,64716}, -- Mercenary
    [27] = {2,1714,82007}, -- Celestial
    [28] = {2,1319,64670}, -- Glass
    [29] = {2,1181,57835}, -- Xivkyn
    [30] = {1,1418,71765}, -- Soul Shriven
    [31] = {2,1715,76895}, -- Draugr
    [33] = {2,1318,57591}, -- Akaviri
    [34] = {1,1025,54868}, -- Imperial
    [35] = {2,1713,57606}, -- Yokudan
	[38] = {3,0,132532}, -- Tsaesci
    [39] = {2,1662,82072}, -- Minotaur
    [40] = {2,1798,75229}, --Ebony
    [41] = {2,1422,74540}, -- Abah's Watch
    [42] = {2,1676,73855}, -- Skinchanger
	[43] = {2,1933,73839}, -- Morag Tong
    [44] = {2,1797,71673}, -- Ra Gada
    [45] = {2,1659,74653}, -- Dro-m'Athra
    [46] = {2,1424,76879}, -- Assassin's League
    [47] = {2,1417,71523}, -- Outlaw
	[48] = {2,2022,130011}, -- Redoran
	[49] = {2,2021,129995}, -- Hlaalu
	[50] = {2,1935,121349}, -- Militant Ordinator
	[51] = {2,2023,121333}, -- Telvanni
	[52] = {2,1934,121317}, -- Bouyant Armiger
    --[53] = {3,0,96954}, -- Frostcaster
	[54] = {2,1932,124680}, -- Ashlander
	[55] = {2,2120,134740}, -- Worm Cult
	[56] = {2,1796,114968}, --Silken Ring
	[57] = {2,1795,114952}, --Mazzatun
	--[58] = {3,0,82053}, -- Grim Harlequin
	[59] = {2,1545,82023}, -- Hollowjack
	[60] = {2,2024,130027}, -- Refabricated
	[61] = {2,2098,132534}, -- Bloodforge
	[62] = {2,2097,132566}, -- Dreadhorn
	[65] = {2,2044,132550}, -- Apostle
	[66] = {2,2045,132582}, -- Ebonshadow
	[69] = {2,2190,134756}, -- Fang Lair
	[70] = {2,2189,134772}, -- Scalecaller
	[71] = {2,2186,137852}, -- Psijic Order
	[72] = {2,2187,137921}, -- Sapiarch
	[73] = {2,2319,140497}, -- Welkynar
	[74] = {2,2188,140445}, -- Dremora
	[75] = {2,2285,140429}, -- Pyandonean
	[77] = {2,2317,140463}, -- Huntsman
	[78] = {2,2318,140479}, -- Silver Dawn
	[79] = {2,2360,142203}, -- Dead-Water
	[80] = {2,2359,142187}, -- Honor Guard
	[81] = {2,2361,142219}, -- Elder Argonian
	[82] = {2,2503,147667}, -- Coldsnap
	[83] = {2,2504,147683}, -- Meridian
	[84] = {2,2505,147699}, -- Anequina
	[85] = {2,2506,147715}, -- Pellitine
	[86] = {2,2507,147731}, -- Sunspire
	[89] = {2,2629,156574}, -- Stags of Z'en
	[92] = {2,2630,156556}, -- Dragonguard
	[93] = {2,2628,156591}, -- Moongrave Fane	
	[94] = {2,2748,156609}, -- New Moon	
	[95] = {2,2750,156628}, -- Shield of Senchal	
	[97] = {2,2747,157518}, -- Icereach Coven
	[98] = {2,2749,158292}, -- Pyre Watch
	--[99] = {2,?,?}, -- Swordthane
	[100] = {2,2757,160494}, -- Blackreach Vanguard
	[101] = {2,2761,160543}, -- Greymoor
	[102] = {2,2762,160560}, -- Sea Giant
	[103] = {2,2763,160577}, -- Ancestral Nord
	[104] = {2,2773,160594}, -- Ancestral High Elf
	[105] = {2,2776,160611}, -- Ancestral Orc
	[106] = {2,2849,166973}, -- Thorn Legion
	[107] = {2,2850,166990}, -- Hazardous Alchemy
	[108] = {2,2903,167174}, -- Ancestral Akaviri
	[110] = {2,2905,167271}, -- Ancestral Reach
	[111] = {2,2926,167944}, -- Nighthollow
	[112] = {2,2938,167961}, -- Arkthzand Armory
	[113] = {2,2998,167978}, -- Wayward Guardian
	[116] = {2,2984,171552}, -- True-Sworn
	[117] = {2,2991,171581}, -- Waking Flame
	[120] = {2,3000,171879}, -- Black Fin Legion
	[121] = {2,3001,171896}, -- Ivory Brigade
	[122] = {2,3002,171913}, -- Sul-Xan
	[123] = {2,3094,176058}, -- Crimson Oath
	[124] = {2,3097,178505}, -- Silver Rose
	--[125] = {2,?,?}, -- Annihilarch's Chosen
	--[126] = {2,?,?}, -- Fargrave Guardian	
}	
 
WE.foodrecipes = { 
45535,45539,45540,45541,45542,45543,45544,45545,45546,45547,45548,45549,45551,45552,45553,45554,45555,45556,45557,45559,45560,45561,45562,45563,45564,45565,45567,45568,45569,45570,45571,45572,45573,45574,45575,45576,45577,45579,45580,45581,45582,45583,45584,45587,45588,45589,45590,45591,45592,45594,45595,45596,45597,45598,45599,45600,45601,45602,45603,45604,45607,45608,45609,45610,45611,45612,45614,45615,45616,45617,45618,45619,45620,45621,45622,45623,45624,45625,45626,45627,45628,45629,45630,45631,45632,45633,45634,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45656,45657,45658,45659,45660,45661,45662,45663,45664,45665,45666,45667,45668,45670,45671,45672,45673,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45684,45685,45686,45687,45688,45689,45690,45691,45692,45693,45694,45695,45696,45697,45698,45699,45700,45701,45702,45703,45704,45705,45706,45707,45708,45709,45710,45711,45712,45713,45714,45715,45716,45717,45718,45719,45791,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45908,45909,45910,45911,45912,45913,45914,45915,45916,45917,45918,45919,45920,45921,45922,45923,45924,45925,45926,45927,45928,45929,45930,45931,45932,45933,45934,45935,45936,45937,45938,45939,45940,45941,45942,45943,45944,45945,45946,45947,45948,45949,45950,45951,45952,45953,45954,45955,45956,45957,45958,45959,45960,45961,45962,45963,45964,45965,45966,45967,45968,45969,45970,45971,45972,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45984,45985,45986,45987,45988,45989,45990,45991,45992,45993,45994,45995,45996,45997,45998,45999,46000,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46020,46021,46022,46023,46024,46025,46026,46027,46028,46029,46030,46031,46032,46033,46034,46035,46036,46037,46038,46039,46040,46041,46042,46043,46044,46045,46046,46047,46048,46049,46050,46051,46052,46053,46054,46055,46056,46079,46081,46082,54241,54242,54243,54369,54370,54371,56943,56944,56945,56946,56947,56948,56949,56950,56951,56952,56953,56954,56955,56956,56957,56958,56959,56961,56962,56963,56964,56965,56966,56967,56968,56969,56970,56971,56972,56973,56974,56975,56976,56977,56978,56979,56980,56981,56982,56983,56984,56985,56986,56987,56988,56989,56990,56991,56992,56993,56994,56995,56996,56997,56998,56999,57000,57001,57002,57003,57004,57005,57006,57007,57008,57009,57010,57011,57012,57013,57014,57015,57016,57017,57018,57019,57020,57021,57022,57023,57024,57025,57026,57027,57028,57029,57030,57031,57032,57033,57034,57035,57036,57037,57038,57039,57040,57041,57042,57043,57044,57045,57046,57047,57048,57049,57050,57051,57052,57053,57054,57055,57056,57057,57058,57059,57060,57061,57062,57063,57064,57065,57066,57067,57068,57069,57070,57071,57072,57073,57074,57075,57076,57077,57078,57079,64223,68189,68190,68191,68192,68193,68194,68195,68196,68197,68198,68199,68200,68201,68202,68203,68204,68205,68206,68207,68208,68209,68210,68211,68212,68213,68214,68215,68216,68217,68218,68219,68220,68221,68222,68223,68224,68225,68226,68227,68228,68229,68230,68231,68232,71060,71061,71062,71063,87682,87683,87684,87688,87689,87692,87693,87694,87698,96960,96961,96962,96963,96964,96965,96966,96967,96968,115029,120077,120767,120768,120769,120770,133551,133552,133553,139012,139017,153624,153626,153628,171324,171331,171435
 }
 
WE.furnrecipes = {
115721,115722,115723,115724,115725,115726,115727,115728,115729,115730,115731,115732,115733,115734,115735,115736,115737,115738,115739,115740,115741,115742,115743,115744,115745,115746,115747,115748,115749,115750,115751,115752,115753,115754,115755,115756,115757,115758,115759,115760,115761,115762,115763,115764,115765,115766,115767,115768,115769,115770,115771,115772,115773,115774,115775,115776,115777,115778,115779,115780,115781,115782,115783,115784,115785,115787,115788,115789,115790,115791,115792,115793,115794,115795,115796,115799,115800,115801,115802,115803,115804,115805,115806,115807,115808,115809,115810,115811,115812,115813,115814,115815,115816,115817,115818,115819,115820,115821,115822,115823,115824,115825,115826,115827,115828,115829,115830,115831,115832,115833,115834,115835,115836,115837,115838,115839,115840,115841,115842,115843,115844,115845,115846,115847,115848,115849,115850,115851,115852,115853,115854,115855,115856,115857,115858,115859,115860,115861,115862,115863,115864,115865,115866,115867,115868,115869,115870,115871,115872,115873,115874,115875,115876,115877,115878,115879,115880,115881,115882,115883,115884,115885,115886,115887,115888,115889,115890,115891,115892,115893,115894,115895,115896,115897,115898,115899,115900,115901,115902,115903,115904,115906,115907,115908,115909,115910,115911,115912,115913,115914,115915,115916,115917,115918,115919,115920,115921,115922,115923,115924,115925,115926,115927,115928,115929,115930,115931,115932,115933,115934,115935,115936,115937,115938,115939,115940,115941,115942,115943,115944,115945,115946,115947,115948,115949,115950,115951,115952,115953,115954,115955,115956,115957,115959,115961,115962,115963,115964,115965,115966,115967,115968,115969,115970,115971,115972,115973,115974,115975,115976,115977,115978,115979,115980,115981,115982,115983,115984,115985,115986,115987,115988,115989,115990,115991,115992,115993,115994,115995,115996,115997,115998,115999,116000,116001,116002,116003,116004,116005,116006,116007,116008,116009,116010,116011,116012,116013,116014,116015,116016,116017,116018,116019,116020,116021,116022,116023,116024,116025,116026,116027,116028,116029,116030,116031,116032,116033,116034,116035,116036,116037,116038,116039,116040,116041,116042,116043,116044,116045,116046,116047,116048,116049,116050,116051,116052,116053,116054,116055,116056,116057,116058,116059,116060,116061,116062,116063,116064,116065,116066,116067,116068,116069,116070,116071,116072,116073,116074,116075,116077,116078,116079,116080,116081,116082,116083,116084,116085,116086,116087,116088,116089,116090,116091,116092,116093,116094,116095,116096,116097,116098,116099,116100,116101,116102,116103,116104,116105,116106,116107,116108,116109,116110,116111,116112,116113,116114,116115,116116,116117,116118,116119,116120,116121,116122,116123,116124,116125,116126,116127,116128,116129,116130,116131,116132,116133,116134,116135,116136,116137,116138,116139,116140,116141,116142,116143,116144,116145,116146,116147,116148,116149,116150,116151,116152,116153,116154,116155,116156,116157,116158,116159,116160,116161,116162,116163,116164,116165,116166,116167,116168,116169,116170,116171,116172,116173,116174,116175,116176,116177,116178,116179,116180,116181,116182,116183,116184,116185,116186,116187,116188,116189,116190,116191,116192,116193,116194,116195,116196,116197,116198,116199,116200,116201,116202,116203,116204,116205,116206,116207,116208,116209,116210,116211,116212,116213,116216,118916,118917,118918,118919,118920,118921,118922,118923,118924,118925,118926,118927,118928,118929,118930,118931,118932,118933,118934,118935,118936,118937,118938,118939,118940,118941,118942,118943,118944,118945,118946,118947,118948,118949,118950,118951,118952,118953,118954,118955,118956,118957,118958,118959,118960,118961,118962,118963,118964,118965,118966,118967,118968,118969,118970,118971,118972,118973,118974,118975,118976,118977,118978,118979,118980,118981,118982,118983,118984,118985,118986,118987,118988,118989,118990,118991,118992,118993,118994,118995,118996,118997,118998,118999,119000,119001,119002,119003,119004,119005,119006,119007,119008,119009,119010,119011,119012,119013,119014,119015,119016,119017,119018,119019,119020,119021,119022,119023,119024,119025,119026,119027,119028,119029,119030,119031,119032,119033,119034,119035,119036,119037,119038,119039,119040,119041,119042,119043,119044,119045,119046,119047,119048,119049,119050,119051,119052,119053,119054,119055,119056,119057,119058,119059,119060,119061,119062,119063,119064,119065,119066,119067,119068,119069,119070,119071,119072,119073,119074,119075,119076,119077,119078,119079,119080,119081,119082,119083,119084,119085,119086,119087,119088,119089,119090,119091,119092,119093,119094,119095,119096,119097,119098,119099,119100,119101,119102,119103,119104,119105,119106,119107,119108,119109,119110,119111,119112,119113,119114,119115,119116,119117,119118,119119,119120,119121,119122,119123,119124,119125,119126,119127,119128,119129,119130,119131,119132,119133,119134,119135,119136,119137,119138,119139,119140,119141,119142,119143,119144,119145,119146,119147,119148,119149,119150,119151,119152,119153,119154,119155,119156,119157,119158,119159,119160,119161,119162,119163,119164,119165,119166,119167,119168,119169,119170,119171,119172,119173,119174,119175,119176,119177,119178,119179,119180,119181,119182,119183,119184,119185,119186,119187,119188,119189,119190,119191,119192,119193,119194,119195,119196,119197,119198,119199,119200,119201,119202,119203,119204,119205,119206,119207,119208,119209,119210,119211,119212,119213,119214,119215,119216,119217,119218,119219,119220,119221,119222,119223,119224,119225,119226,119228,119229,119230,119231,119232,119233,119234,119235,119236,119238,119239,119240,119241,119242,119243,119244,119245,119246,119247,119248,119249,119250,119251,119252,119253,119254,119255,119256,119257,119258,119259,119260,119261,119262,119263,119264,119265,119266,119267,119268,119269,119270,119271,119272,119273,119274,119275,119276,119277,119278,119279,119280,119281,119282,119283,119284,119285,119286,119287,119288,119290,119291,119292,119293,119295,119296,119297,119298,119299,119300,119301,119302,119303,119304,119305,119306,119307,119308,119309,119310,119311,119312,119314,119317,119325,119328,119330,119331,119338,119342,119344,119348,119350,119351,119352,119353,119354,119356,119357,119358,119359,119360,119361,119362,119363,119364,119365,119366,119367,119368,119369,119370,119371,119372,119373,119374,119375,119376,119377,119378,119379,119380,119381,119382,119383,119384,119385,119386,119387,119388,119389,119390,119391,119392,119393,119394,119395,119396,119397,119399,119400,119401,119402,119403,119404,119405,119406,119407,119408,119413,119416,119418,119420,119421,119422,119423,119424,119425,119427,119429,119432,119438,119439,119440,119443,119444,119445,119446,119451,119462,119463,119464,119465,119467,119468,119469,119470,119471,119472,119476,119477,119478,119479,119480,119481,119482,119483,119484,119485,119486,119487,119488,119489,119490,119491,119518,119520,119524,119525,119526,119527,119529,119532,119533,119539,119540,119541,119542,119543,119592,121059,121091,121098,121104,121120,121163,121164,121165,121166,121168,121197,121199,121200,121203,121207,121209,121214,121304,121305,121306,121307,121308,121309,121310,121311,121313,121315,121365,121366,121369,121371,121372,121373,121374,121545,121546,126582,126583,126834,126835,126836,126837,126838,126839,126840,126841,126842,126844,126845,126846,126847,126848,126849,126850,126851,126852,126853,126854,126855,126856,126857,126858,126859,126860,126861,126862,126863,126864,126865,126866,126867,126868,126869,126870,126871,126872,126873,126874,126875,126876,126877,126878,126879,126880,126881,126882,126883,126884,126885,126886,126887,126888,126889,126890,126891,126892,126893,126894,126895,126896,126897,126898,126899,126900,126901,126902,126903,126904,126905,126906,126907,126908,126909,126910,126911,126912,126913,126914,126915,126916,126917,126918,126919,126920,126921,126922,126923,126924,126925,126926,126927,126928,126929,126930,126931,126932,126933,126934,126935,126936,126937,126938,126939,126940,126941,126942,126943,126944,126945,126946,126947,126948,126949,126950,126951,126952,126953,126954,126955,126956,126957,126958,126959,126960,126961,126962,126963,126964,126965,126966,126967,126968,126969,126970,126971,126972,126973,126974,126975,126976,126977,126978,126979,126980,126981,126982,126983,126984,126985,126986,126987,126988,126989,126990,126991,126992,126993,126994,126995,126996,126997,126998,126999,127000,127001,127002,127003,127004,127005,127006,127007,127008,127009,127010,127011,127012,127013,127014,127015,127016,127017,127018,127019,127020,127021,127022,127023,127024,127025,127026,127027,127028,127029,127030,127031,127032,127033,127034,127035,127036,127037,127038,127039,127040,127041,127042,127043,127044,127045,127046,127047,127048,127049,127050,127051,127052,127053,127054,127055,127056,127057,127058,127059,127060,127061,127062,127063,127064,127065,127066,127067,127068,127069,127070,127071,127072,127073,127074,127075,127076,127077,127078,127079,127080,127081,127082,127083,127084,127085,127086,127087,127088,127089,127090,127091,127092,127093,127094,127095,127096,127097,127098,127099,127100,127101,127102,127103,127104,132167,132173,132179,132183,132184,132185,132186,132187,132188,132189,132190,132191,132192,132193,132194,132195,132196,132342,132343,132344,134476,134477,134478,134479,134480,134481,134482,134483,134484,134485,134486,134487,134488,134489,134490,134491,134492,134493,134494,134496,134497,134498,134500,134501,134502,134503,134504,134505,134506,134507,134508,134509,134510,134511,134512,134513,134514,134515,134516,134517,134518,134519,134520,134521,134522,134523,134524,134525,134526,134527,134528,134529,134530,134531,134532,134533,134534,134535,134536,134537,134538,134539,134540,134543,134544,134545,134546,134582,134982,134983,134984,134985,134986,134987,134998,134999,139484,139485,139486,139487,139488,139489,139490,139491,139492,139493,139494,139495,139496,139497,139498,139499,139500,139501,139502,139503,139504,139505,139506,139507,139508,139509,139510,139511,139512,139513,139514,139515,139516,139517,139518,139519,139520,139521,139522,139523,139524,139525,139526,139527,139528,139529,139530,139531,139532,139533,139534,139535,139536,139537,139538,139539,139540,139541,139542,139543,139544,139545,139546,139547,139548,139549,139550,139551,139552,139553,139554,139555,139556,139557,139558,139559,139563,139564,139565,139566,139567,139568,139569,139570,139571,139572,139573,139574,139575,139576,139577,139578,139579,139580,139581,139582,139583,139584,139585,139586,139587,139588,139589,139590,139591,139592,139593,139594,139595,139596,139597,139598,139599,139600,139601,139602,139603,139604,139605,139606,139607,139608,139609,139610,139611,139612,139613,139614,139615,139616,139617,139618,139619,139620,139621,139622,139623,139624,139625,139626,139627,139628,139629,139630,139631,139632,139633,139634,139635,139636,139637,139638,139639,139640,139641,139642,139643,139644,139645,139646,139647,139648,139649,141896,141897,141898,141899,141900,141901,141902,141903,141904,141905,141906,141907,145915,145944,145945,145946,145947,145948,145949,145950,145951,145952,145953,145954,145955,145956,145957,145958,145959,145960,145961,145962,145963,145964,145965,145966,145967,145968,145969,145970,145971,145972,145973,145974,145975,145976,145977,145978,145979,145980,145981,145982,145983,145984,145985,145986,145987,145988,145989,145990,145991,145992,145993,145994,145995,145996,145997,145998,145999,146000,146001,146002,146003,146004,146005,146006,146007,146008,146009,146010,146011,146012,146013,146014,146015,146016,146017,147651,147652,147653,147654,147655,147656,147657,151972,151973,151974,151975,151976,151977,151978,151979,151980,151981,151982,151983,151984,151985,151986,151987,151988,151989,151990,151991,151992,151993,151994,151995,151996,151997,151998,151999,152000,152001,152002,152003,152004,152005,152006,152007,152008,152009,152010,152011,152012,152013,152014,152015,152016,152017,152018,152019,152020,152021,152022,152023,152024,152025,152026,152027,152028,152029,152030,152031,152032,152033,152034,152035,152036,152037,152038,152039,152040,152041,152042,152043,152044,152045,152046,152047,152048,152049,152050,152051,152052,152053,152054,152055,152056,152057,152058,152059,152060,152061,152062,152063,152064,152065,152066,152067,152068,152069,152070,152071,152072,152073,152074,152075,152076,152077,152078,152079,152080,152081,152082,152083,152084,152085,152086,152087,152088,152089,152090,152091,152092,152093,152094,152095,152096,152097,152098,152099,152100,152101,152102,152103,152104,152105,152106,152107,152108,152109,152110,152111,152112,152113,152114,152115,152116,152117,152118,152119,152120,152237,152238,153723,153724,153725,153726,153727,153728,153729,153730,153731,153732,153733,153734,153735,159498,159499,159500,159501,159502,159503,159504,166727,166728,166729,166730,166731,166732,166733,166734,166735,166736,166737,166738,166739,166740,166741,166742,166743,166744,166745,166746,166747,166748,166749,166750,166751,166752,166753,166754,166755,166756,166757,166758,166759,166760,166761,166762,166763,166764,166765,166766,166767,166768,166769,166770,166771,166772,166773,166774,166775,166776,166777,166778,166779,166780,166781,166782,166783,166784,166785,166786,166787,166788,166789,166790,166791,166792,166793,166794,166795,166796,166797,166798,166799,166800,166801,166802,166803,166804,166805,166806,166807,166808,166809,166810,166811,166812,166813,166814,166815,166816,166817,166818,166819,166820,166821,166822,166823,166824,166825,166826,166827,166828,166829,166830,166831,166832,166833,166834,166835,166836,166837,166838,166839,166840,166841,166842,166843,166844,166845,166846,166847,166848,166849,166850,166851,166852,166853,166854,166855,166856,166857,166858,166859,166860,166861,166862,166863,166864,166865,166866,166867,166868,166869,166870,166871,166872,166873,166874,166875,166876,166877,166878,166879,166880,166881,166882,166883,166884,166885,166886,166887,166888,166889,166890,166891,166892,166893,166894,166895,166896,166897,166898,166899,166900,166901,166902,166903,166904,166905,166906,166907,166908,166909,166910,166911,166912,166913,166914,166915,166916,166917,166918,166919,166920,166921,166922,166923,166924,166925,166926,166927,166928,166929,166930,166931,166932,166933,166934,166935,166936,166937,166938,166939,166940,166941,166942,166943,166944,166945,166946,166947,166948,166949,166950,166951,166952,166953,166954,166955,166956,166957,166958,166959,167354,167355,167356,167357,167358,167359,167360,167361,167362,167363,167364,167365,167366,167367,167368,167369,167370,167371,167372,167373,167374,167375,167376,167377,167378,167379,167380,167381,167382,167383,167384,171481,171482,171483,171484,171485,171486,171487,171488,171489,171490,171491,171492,171493,171494,171495,171496,171497,171498,171499,171500,171501,171502,171503,171504,171505,171506,171507,171508,171509,171510,171511,171512,171513,171514,171515,171516,171517,171518,171519,171520,171521,171522,171523,171524,171525,171526,171527,171528,171529,171781,171782,171783,171784,171785,171786,171787,171788,171789,171790,171791,171792,171793,171794,171795,171796,171797,171798,171799,171800,171801,171802,171803,171804,171805,171806,171807,175915,175916,175917,175918,175919,175920,175921,175922,175923,175924,175925,175926,175927,175928,175929,175930,175931,175932,175933,175934,175935,175936,175937,175938,175939,175940,175941,175942,175943,175944,175945,175946,175947,175948,175949,175950,175951,175952,175953,175954,175955,175956,175957,175958,175959,175960,175961,175962,175963,175964,175965,175966,175967,175968,175969,175970,175971,175972,175973,175974,175975,175976,175977,175978,175979,175980,175981,175982,175983,175984,175985,175986,175987,175988,175989,175990,175991,175992,175993,175994,175995,175996,175997,175998,175999,176000,176001,176002,176003,176004,176005,176006,176007,176008,176009,176010,176011,176012,176013,176014,176015,176016,176017,176018,176019,176020,176021,176022,176023,176024,176025,176026,176027,176028,176029,176030,176031,176032,176033,176034,176035,176036,181549,181550,181551,181552,181553,181554,181555,181556,181557,181558,181559,181560,181561,181562,181565,181566,181567,181568,181569,181570,181571,181572,181573,181574,181575,181576,181577,181578,181579,181580,181581,181582,181583,181584,181585,182937,182938,182939,182940,182941,182942,182943,182944,182945,182946,182947,182948,182949,182950,182951,182952,182953,182954,182955,182956,182957,182958,182959,182960,182961,182962,182963,182964,182965,182966,182967,182968,182969,182970,182971,182972,182973,182974,182975,182976,182977,182978,182979,182980,182981,182982,182983,182984,182985,182986,182987,182988,182989,182990,182991,182992,182993,182994,182995,182996,182997,182998,182999,183000,183001,183002,183003,183004
}

-- [itemID] = gold, AP, writ vouchers, tel var; will be implemented once I have usable data
WE.vendorfurn = {}

WE.houses = { --name, cost, furniture value, owned GetCurrentZoneHouseId()
[1] = {"Mara's Kiss Public House",0,0,0}, --assuming you got it free
[2] = {"The Rosy Lion",0,0,0}, --assuming you got it free
[3] = {"The Ebony Flask Inn Room",0,0,0}, --assuming you got it free
[4] = {"Barbed Hook Private Room",11000,0,0},
[5] = {"Sisters of the Sands Apartment",12000,0,0},
[6] = {"Flaming Nix Deluxe Garret",13000,0,0},
[7] = {"Black Vine Villa",54000,0,0},
[8] = {"Cliffshade",255000,0,0},
[9] = {"Mathiisen Manor",1025000,0,0},
[10] = {"Humblemud",40000,0,0},
[11] = {"The Ample Domicile",195000,0,0},
[12] = {"Stay-Moist Mansion",760000,0,0},
[13] = {"Snugpod",45000,0,0},
[14] = {"Bouldertree Refuge",190000,0,0},
[15] = {"The Gorinir Estate",780000,0,0},
[16] = {"Captain Margaux's Place",56000,0,0},
[17] = {"Ravenhurst",260000,0,0},
[18] = {"Gardner House",1015000,0,0},
[19] = {"Kragenhome",69000,0,0},
[20] = {"Velothi Reverie",323000,0,0},
[21] = {"Quondam Indorilia",1265000,0,0},
[22] = {"Moonmirth House",50000,0,0},
[23] = {"Sleek Creek House",335000,0,0},
[24] = {"Dawnshadow",1275000,0,0},
[25] = {"Cyrodilic Jungle House",71000,0,0},
[26] = {"Domus Phrasticus",295000,0,0},
[27] = {"Strident Springs Demesne",1280000,0,0},
[28] = {"Autumn's-Gate",60000,0,0},
[29] = {"Grymharth's Woe",280000,0,0},
[30] = {"Old Mistveil Manor",1020000,0,0},
[31] = {"Hammerdeath Bungalow",65000,0,0},
[32] = {"Mournoth Keep",325000,0,0},
[33] = {"Forsaken Stronghold",1285000,0,0},
[34] = {"Twin Arches",73000,0,0},
[35] = {"House of the Silent Magnifico",320000,0,0},
[36] = {"Hunding's Palatial Hall",1295000,0,0},
[37] = {"Serenity Falls Estate",3775000,0,0},
[38] = {"Daggerfall Overlook",3780000,0,0},
[39] = {"Ebonheart Chateau",3785000,0,0},
[40] = {"Grand Topal Hideaway",0,0,0}, --crown store
[41] = {"Earthtear Cavern",0,0,0}, --crown store
[42] = {"Saint Delyn Penthouse",0,0,0}, --assuming you got it free
[43] = {"Amaya Lake Lodge",1300000,0,0},
[44] = {"Ald Velothi Harbor House",322000,0,0},
[45] = {"Tel Galen Tower",0,0,0}, --crown store
[46] = {"Linchal Grand Manor",0,0,0}, --crown store
[47] = {"Coldharbour Surreal Estate",1000000,0,0},
[48] = {"Hakkvild's High Hall",3800000,0,0},
[49] = {"Exorcised Coven Cottage",250000,0,0},
[54] = {"Pariah's Pinnacle",0,0,0}, --crown store
[55] = {"The Orbservatory Prior",0,0,0}, -- crown store
[56] = {"The Erstwhile Sanctuary",0,0,0}, -- crown store
[57] = {"Princely Dawnlight Palace",0,0,0}, -- crown store
[58] = {"Golden Gryphon Garret",0,0,0}, --assuming you got it free
[59] = {"Alinor Crest Townhouse",1025000,0,0},
[60] = {"Colossal Aldmeri Grotto",0,0,0}, -- crown store
[61] = {"Hunter's Glade",0,0,0}, -- crown store
[62] = {"Grand Psijic Villa",0,0,0}, -- crown store
[63] = {"Enchanted Snow Globe Home",0,0,0}, -- crown store
[64] = {"Lakemire Xanmeer Manor",0,0,0}, -- crown store
[65] = {"Frostvault Chasm",0,0,0}, -- crown store
[66] = {"Elinhir Private Arena",0,0,0}, -- crown store
[68] = {"Sugar Bowl Suite",0,0,0}, -- assuming you got it free
[69] = {"Jode's Embrace",0,0,0}, -- crown store
[70] = {"Hall of the Lunar Champion",0,0,0}, -- price unknown
[71] = {"Moon-Sugar Meadow",0,0,0}, -- crown store
[72] = {"Wraithhome",0,0,0}, -- price unknown
[73] = {"Lucky Cat Landing",0,0,0}, -- price unknown
[74] = {"Potentate's Retreat",0,0,0}, -- price unknown
[75] = {"Foregmaster Falls",0,0,0}, -- price unknown
[76] = {"Thieves' Oasis",0,0,0}, -- price unknown
[77] = {"Snowmelt Suite",0,0,0}, -- assuming you got it free
[78] = {"Proudspire Manor",1050000,0,0},
[79] = {"Bastion Sanguinaris",0,0,0}, -- price unknown
[80] = {"Stillwaters Retreat",0,0,0}, -- price unknown
[81] = {"Antiquarian's Alpine Gallery",0,0,0}, -- price unknown
[82] = {"Shalidor's Shrouded Realm",0,0,0}, -- price unknown
[83] = {"Stone Eagle Aerie",0,0,0}, -- price unknown
[85] = {"Kushalit Sanctuary",0,0,0}, -- price unknown
[86] = {"Varlaisvea Ayleid Ruins",0,0,0}, -- price unknown
[88] = {"Water's Edge",0,0,0}, -- assuming you got it free
[89] = {"Pantherfang Chapel",0,0,0}, -- price unknown
}

WE.bankspace = {
[70] = 1000,
[80] = 3300,
[90] = 6800,
[100] = 11400,
[110] = 20500,
[120] = 28300,
[130] = 32700,
[140] = 37500,
[150] = 42000,
[160] = 45000,
[170] = 50000,
[180] = 55000,
[190] = 60000,
[200] = 65000,
[210] = 70000,
[220] = 75000,
[230] = 80000,
[240] = 85000,
}

function WE.IsSimpleStyle(style)
    if not WE.styles[style] then return false end
    if WE.styles[style][1] == 1 then return true end
    return false
end

function WE.IsKnownStyle(style,chapter)
	if not WE.styles[style] then return false end
	if WE.IsSimpleStyle(style) then
		return IsSmithingStyleKnown(style)
	else  
		local _, known = GetAchievementCriterion(WE.styles[style][2],chapter)
		if known == 1 then return true end
	end
	return false
end

local function OnAddOnLoaded(event, addonName)
	if addonName == WE.Name then 
		WE:Initialize()
	end
end

local function SettingsUpdate(setname,setval)
	WE.SV[setname] = setval
end 

local function GuildListingViewer(event)
	EVENT_MANAGER:RegisterForUpdate(WE.Name, 1000, function() WE.GuildFetch() end)
end

--Grabs listing from guilds as viewed
function WE.GuildFetch()
	if SCENE_MANAGER:GetCurrentScene():GetName() == "tradinghouse" then
		if TRADING_HOUSE.m_currentMode == 3 then
			local sum = WE.GuildListingSum()
			if sum ~= 0 then
				WE.guilds[select(1,GetCurrentTradingHouseGuildDetails())] = {[1]=select(2,GetCurrentTradingHouseGuildDetails()),[2]=sum}
			end		
		end
	else
		EVENT_MANAGER:UnregisterForUpdate(WE.Name)
	end	
end

--Creates item link from ID
function WE.GetItemLinkFromID(itemID)
	if type(itemID) == "number" then
		return "|H1:item:" .. itemID .. ":0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0|h|h"
	end
	return 0
end

--Grabs item price using item links or IDs
function WE.ItemPrice(itemLink,mode)
	if itemLink ~= nil then
		local itemID = 0
		if type(itemLink) == "number" then
			itemID = itemLink
			itemLink = "|H1:item:" .. itemLink .. ":0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0|h|h"
		else	
			itemID = tonumber(string.match(itemLink, '|H.-:item:(.-):'))
		end	
		
		local value = 0
		--Use LibPrice if possible
		if LibPrice then
			value = LibPrice.ItemLinkToPriceGold(itemLink)
		--Attempt to use MM if not	
		elseif MasterMerchant then
			local itemIndex = MasterMerchant.makeIndexFromLink(itemLink)
			local tipStats = MasterMerchant:toolTipStats(itemID,itemIndex,true,true,false)
			if tipStats.avgPrice ~= nil then
				value = string.format('%.2f',tipStats.avgPrice)
			end
		end	
		
		value = value == nil and 0 or value
		if mode == nil then
			CHAT_SYSTEM:AddMessage(value)
		else
			return value
		end	
	else
		return 0
	end
end

--Adds space formatting for readabiltiy
function WE.FormatNum(num) 
	local str = tostring(math.ceil(num))
	local new_num = ""
	if string.len(str) > 3 then
		local t={}
		str:gsub(".",function(c) table.insert(t,c) end)
		for i = #t, 1 , -1 do
			if (#t-i+1) % 3 == 0 then
				new_num = " " .. t[i] .. new_num
			else	
				new_num = t[i] .. new_num
			end	
		end
		new_num = new_num:gsub("^%s","")
		return new_num
	else
		return str
	end	
end

--Dumps the items from the select source
function WE.ValueDump(mode)
	local bag_size = 0
	bag_size = tonumber(GetBagSize(mode))
	local bag_type = ""
	for i = 0, bag_size, 1 do
		if select(2,GetItemInfo(mode,i)) ~= 0 then
			CHAT_SYSTEM:AddMessage("Slot ID #" .. i .. ": " .. GetItemLink(mode,i) .. " Quantity: " .. select(2,GetItemInfo(mode,i)))
		end
	end	
end

--Handles individual calls to WE.ValueDump

local function WornDump()
	return WE.ValueDump(BAG_WORN)
end

local function BagDump()
	return WE.ValueDump(BAG_BACKPACK)
end

local function BankDump()
	return WE.ValueDump(BAG_BANK)
end

local function BankPDump()
	return WE.ValueDump(BAG_SUBSCRIBER_BANK)
end

local function HouseBankDump(bank)
	--Adjust for bank slot positions
	if bank == nil or bank == '' then 
		bank = 7 
		CHAT_SYSTEM:AddMessage("Enter bank number for specific bank. House bank 1 auto-selected.")
	else 
	bank = tonumber(bank) + 6 end
	return WE.ValueDump(bank)
end

--Outputs the value of the selected source; optional flag to shut off unknowns
function WE.ValueSum(mode,unk,bind_mode)
	if unk == nil then unk = 0 end
	if bind_mode == nil then bind_mode = 0 end
	local bag_size = 0
	local sum_item = true
	bag_size = tonumber(GetBagSize(mode))
	local bag_type = ""
	--Backpack
	if mode == BAG_WORN then
		bag_type = "worn equipment"
	elseif mode == BAG_BACKPACK then
		bag_type = "inventory"
	elseif mode == BAG_BANK or mode == BAG_SUBSCRIBER_BANK then
		bag_type = "bank"
	elseif IsHouseBankBag(mode) then
		bag_type = "house bank"
		--Grab its name; use the nickname if possible
		local collect_id = GetCollectibleForHouseBankBag(mode)
		local collect_nick = GetCollectibleNickname(collect_id)
		if collect_nick == '' then
			collect_nick = GetCollectibleInfo(collect_id)
		end	
		bag_type = bag_type .. " (" .. collect_nick .. ")"
	end	
	local sum = 0
	for i = 0, bag_size, 1 do
		--Handle bound modes
		if bind_mode == 1 then
			sum_item = IsItemBound(mode,i)
		elseif bind_mode == 2 then
			sum_item = not IsItemBound(mode,i)
		else
			sum_item = true
		end	
		if select(2,GetItemInfo(mode,i)) ~= 0 then
			if WE.ItemPrice(GetItemLink(mode,i),1) == 0 and sum_item then
				--Check for a vendor value
				if select(3,GetItemInfo(mode,i)) ~= 0 then
					if unk == 0 and WE.SV.unknownwarning then
						CHAT_SYSTEM:AddMessage("Vendor value used: " .. GetItemLink(mode,i))
					end	
					if IsItemStolen(mode,i) then
						sum = sum+GetItemSellValueWithBonuses(mode,i)*select(2,GetItemInfo(mode,i))
					else
						sum = sum+select(3,GetItemInfo(mode,i))*select(2,GetItemInfo(mode,i))
					end	
				elseif unk == 0 and WE.SV.unknownwarning then
					CHAT_SYSTEM:AddMessage("Unknown value: " .. GetItemLink(mode,i))
				end
			elseif sum_item then
				sum = sum+WE.ItemPrice(GetItemLink(mode,i),1)*select(2,GetItemInfo(mode,i))
			end	
		end
	end	
	--Only house calls return both
	if IsHouseBankBag(mode) then
		if unk == 0 or sum > 0 then
			CHAT_SYSTEM:AddMessage("Estimated " .. bag_type .. " value: " .. WE.FormatNum(sum))
		end
		return math.ceil(sum)
	elseif unk == 0 then
		CHAT_SYSTEM:AddMessage("Estimated " .. bag_type .. " value: " .. WE.FormatNum(sum))
	else
		return math.ceil(sum)
	end	
end

--Handles individual calls to WE.ValueSum

local function WornAll()
	return WE.ValueSum(BAG_WORN)
end

local function WornBound()
	return WE.ValueSum(BAG_WORN,0,1)
end

local function WornUnbound()
	return WE.ValueSum(BAG_WORN,0,2)
end

local function BagAll()
	return WE.ValueSum(BAG_BACKPACK)
end

local function BagBound()
	return WE.ValueSum(BAG_BACKPACK,0,1)
end

local function BagUnbound()
	return WE.ValueSum(BAG_BACKPACK,0,2)
end

local function BankAll()
	return WE.ValueSum(BAG_BANK)+WE.ValueSum(BAG_SUBSCRIBER_BANK)
end

local function BankBound()
	return WE.ValueSum(BAG_BANK,0,1)+WE.ValueSum(BAG_SUBSCRIBER_BANK,0,1)
end

local function BankUnbound()
	return WE.ValueSum(BAG_BANK,0,2)+WE.ValueSum(BAG_SUBSCRIBER_BANK,0,2)
end

local function HouseBankChoose(unk,bind_mode)
	if unk == nil or unk == "" then unk = 0 end
	if bind_mode == nil then bind_mode = 0 end
	return WE.ValueSum(BAG_HOUSE_BANK_ONE,unk,bind_mode)+WE.ValueSum(BAG_HOUSE_BANK_TWO,unk,bind_mode)+WE.ValueSum(BAG_HOUSE_BANK_THREE,unk,bind_mode)+WE.ValueSum(BAG_HOUSE_BANK_FOUR,unk,bind_mode)+WE.ValueSum(BAG_HOUSE_BANK_FIVE,unk,bind_mode)+WE.ValueSum(BAG_HOUSE_BANK_SIX,unk,bind_mode)+WE.ValueSum(BAG_HOUSE_BANK_SEVEN,unk,bind_mode)+WE.ValueSum(BAG_HOUSE_BANK_EIGHT,unk,bind_mode)--+WE.ValueSum(BAG_HOUSE_BANK_NINE,unk,bind_mode)+WE.ValueSum(BAG_HOUSE_BANK_TEN,unk,bind_mode) not in game yet, but bag IDs exist
end

local function HouseBankAll()
	return HouseBankChoose(0,0)
end

local function HouseBankBound()
	return HouseBankChoose(0,1)
end

local function HouseBankUnbound()
	return HouseBankChoose(0,2)
end

function WE.CraftBagSum(unk,bind_mode)
if unk == nil or unk == "" then unk = 0 end
if bind_mode == nil then bind_mode = 0 end
local sum = 0
	if bind_mode ~= 1 and SHARED_INVENTORY.bagCache[BAG_VIRTUAL] then
		for index, data in pairs(SHARED_INVENTORY.bagCache[BAG_VIRTUAL])do 
			if data ~= nil then
				if WE.ItemPrice(GetItemLink(BAG_VIRTUAL,data.slotIndex),1) == 0 then
					if select(3,GetItemInfo(BAG_VIRTUAL,data.slotIndex)) ~= 0 then
						if unk == 0 and WE.SV.unknownwarning then
							CHAT_SYSTEM:AddMessage("Vendor value used: " .. GetItemLink(BAG_VIRTUAL,data.slotIndex))
						end
						sum = sum+select(3,GetItemInfo(BAG_VIRTUAL,data.slotIndex))*select(2,GetItemInfo(BAG_VIRTUAL,data.slotIndex))
					elseif unk == 0 and WE.SV.unknownwarning then
						CHAT_SYSTEM:AddMessage("Unknown value: " .. GetItemLink(BAG_VIRTUAL,data.slotIndex))
					end
				else	
					sum = sum+WE.ItemPrice(GetItemLink(BAG_VIRTUAL,data.slotIndex),1)*select(2,GetItemInfo(BAG_VIRTUAL,data.slotIndex))
				end	
			end
		end
		if unk == 0 then
			CHAT_SYSTEM:AddMessage("Estimated craft bag value: " .. WE.FormatNum(sum))
		else
			return math.ceil(sum)
		end
	else
		return 0
	end	
end

--Grabs the value of a motif
function WE.MotifValue(motif,unk)
	--Check if it is a simple style
	if WE.IsSimpleStyle(motif) and WE.IsKnownStyle(motif,0) then
		if WE.ItemPrice(WE.styles[motif][3],1) == 0 then
			if unk == 0 and WE.SV.unknownwarning then
				CHAT_SYSTEM:AddMessage("Vendor value used: " .. WE.GetItemLinkFromID(WE.styles[motif][3]))
			end	
			local val = select(2,GetItemLinkInfo(WE.GetItemLinkFromID(WE.styles[motif][3])))
			return val
		else
			return WE.ItemPrice(WE.styles[motif][3],1)
		end	
	else	
		local motif_sum = 0
		local current_motif = 0
		for x=1,14,1 do
			if WE.IsKnownStyle(motif,x) then
				current_motif = WE.GetItemLinkFromID(WE.styles[motif][3]+x-1) 
				if WE.ItemPrice(current_motif,1) == 0 then
					if unk == 0 and WE.SV.unknownwarning then
						CHAT_SYSTEM:AddMessage("Vendor value used: " .. current_motif)
					end	
					motif_sum = motif_sum + select(2,GetItemLinkInfo(current_motif))
				else
					motif_sum = motif_sum + WE.ItemPrice(current_motif,1)
				end	
			end	
		end
		return motif_sum
	end
	return 0
end

--Calculates the cost of known motif knowledge
function WE.MotifKnowledgeCost(mode,unk)
	if mode == '' then mode = nil end
	if unk == nil then unk = 0 end
	if mode ~= 2 then
		local motif_value = 0
		for index,data in pairs (WE.styles) do
			motif_value = motif_value + WE.MotifValue(index,unk)
		end
		if mode == nil then
			CHAT_SYSTEM:AddMessage("Estimated motif knowledge value: " .. WE.FormatNum(motif_value))
		else
			return motif_value
		end	
	else
		return 0
	end	
end

--Calculates the cost of known recipes
function WE.RecipeKnowledgeCost(group,bind_mode,unk) -- group (0 = cook, 1 = furn)
	if group == '' or group == nil then group = 0 end
	if unk == nil then unk = 0 end
	local recipe_group = WE.foodrecipes
	local group_text = "cooking"
	if group == 1 then
		recipe_group = WE.furnrecipes
		group_text = "furnishing"
	end	
	if bind_mode ~= 2 then
		local recipe_value = 0
		local current_recipe = 0
		for index,data in pairs (recipe_group) do
			current_recipe = WE.GetItemLinkFromID(data)
			if IsItemLinkRecipeKnown(current_recipe) then
				if WE.ItemPrice(current_recipe,1) == 0 then
					if unk == 0 and WE.SV.unknownwarning then
						CHAT_SYSTEM:AddMessage("Vendor value used: " .. current_recipe)
					end	
					recipe_value = recipe_value + select(2,GetItemLinkInfo(current_recipe))
				else
					recipe_value = recipe_value + WE.ItemPrice(current_recipe,1)
				end	
			end
		end
		if bind_mode == nil then
			CHAT_SYSTEM:AddMessage("Estimated " .. group_text .. " recipe knowledge value: " .. WE.FormatNum(recipe_value))
		else
			return recipe_value
		end	
	else
		return 0
	end	
end

--Outputs both cooking and furnishing 
local function RecipeChoose()
	WE.RecipeKnowledgeCost(0,nil,0)
	WE.RecipeKnowledgeCost(1,nil,0)
end

--Checks the item is in the lookup table
local function InVendorFurn(itemLink)
	--Strip to ID
	local itemID = tonumber(string.match(itemLink, '|H.-:item:(.-):'))
	--Check table
	local row = WE.vendorfurn[itemID]
	if row ~= nil then
		return true
	else
		return false
	end	
end

--Calculates the pseudovalue of the furniture item
local function PurchasedFurnitureCost(itemLink)
	--Strip to ID
	local itemID = tonumber(string.match(itemLink, '|H.-:item:(.-):'))
	--Check table
	local row = WE.vendorfurn[itemID]
	if row ~= nil then
		local sum = row[1]
		sum = sum + (WE.SV.includeap and row[2]*WE.SV.apval or 0)
		sum = sum + (WE.SV.includevoucher and row[3]*WE.SV.voucherval or 0)
		sum = sum + (WE.SV.includetelvar and row[4]*WE.SV.telvarval or 0)
		return sum
	else
		return 0
	end
end

--Calculates the furniture of the house you're in
--bind mode exists, but it isn't used in the wealth call or saved, so it is currently irrelevant
function WE.HouseFurnishingCost(bind_mode,unk)
	if bind_mode == '' then bind_mode = nil end
	if unk == nil then unk = 0 end
	--Ensure you're in a house
	house = GetCurrentZoneHouseId()
	if house ~= 0 and IsOwnerOfCurrentHouse() then
		local sum = 0
		for index,data in pairs (SHARED_FURNITURE.retrievableFurniture) do
			link,_ = GetPlacedFurnitureLink(data['retrievableFurnitureId'])
			if link ~= '' then
				--Handle bound modes
				if bind_mode == 1 then
					sum_item = IsItemLinkBound(link)
				elseif bind_mode == 2 then
					sum_item = not IsItemLinkBound(link)
				else
					sum_item = true
				end
				
				if sum_item then
					--Use MM if possible
					if WE.ItemPrice(link,1) ~= 0 then
						sum = sum+WE.ItemPrice(link,1)
						sum_item = false
					elseif InVendorFurn(link) then	
						sum = sum+PurchasedFurnitureCost(link)
						sum_item = false
						if unk == 0 and WE.SV.unknownwarning then
							CHAT_SYSTEM:AddMessage("Estimated vendor cost used: " .. link)
						end
					end
				end	
				if WE.ItemPrice(link,1) == 0 and sum_item then
					--Check for a vendor value
					if select(2,GetItemLinkInfo(link)) ~= 0 then
						if unk == 0 and WE.SV.unknownwarning then
							CHAT_SYSTEM:AddMessage("Vendor value used: " .. link)
						end	
						sum = sum+select(2,GetItemLinkInfo(link))
					elseif unk == 0 and WE.SV.unknownwarning then
						CHAT_SYSTEM:AddMessage("Unknown value: " .. link)
					end
				end
			end
		end
		if bind_mode == nil then
			CHAT_SYSTEM:AddMessage("Estimated furniture value in " .. WE.houses[house][1] .. ": " .. WE.FormatNum(sum))
		else
			return sum
		end
		--Also write it to the housing table and save it	
		WE.houses[house][3] = math.floor(sum)
		WE.houses[house][4] = 1
		if WE.SV.homes[house] == nil then
			WE.SV.homes[house] = {0,0}
		end			
		WE.SV.homes[house][1] = 1
		WE.SV.homes[house][2] = math.floor(sum)
	else
		return 0
	end
end

--Automatically calculate furniture sum upon house entry
local function AutoFurnitureSum()
	if WE.SV.autofurnituresum and GetCurrentZoneHouseId() ~= 0 and IsOwnerOfCurrentHouse() then
		--Does not use unknown warnings just to not be annoying
		WE.HouseFurnishingCost('',1)
	end	
end

--Calculates the cost of the homes you own
function WE.HouseCost(bind_mode)
	if bind_mode == '' then bind_mode = nil end
	if bind_mode ~= 2 then
		local sum = 0
		for index,data in pairs (WE.houses) do
			--Build own data via collectible
			local _,_,_,_,owned = GetCollectibleInfo(GetCollectibleIdForHouse(index))
			if owned then
				sum = sum + data[2]
				--Update it for this session and all accounts
				data[4] = 1
				if WE.SV.homes[index] == nil then
					WE.SV.homes[index] = {0,0}
				end				
				WE.SV.homes[index][1] = 1	
			end	
		end
		if bind_mode == nil then
			CHAT_SYSTEM:AddMessage("Estimated cost of houses: " .. WE.FormatNum(sum))
		else
			return sum
		end	
	else
		return 0
	end
end

--Gives total wealth sum
local function WealthSum(bind_mode)
	local worn = WE.SV.includeworn and WE.ValueSum(BAG_WORN,1,bind_mode) or 0
	local bag = WE.SV.includebag and WE.ValueSum(BAG_BACKPACK,1,bind_mode) or 0
	local bank = WE.SV.includebank and WE.ValueSum(BAG_BANK,1,bind_mode)+WE.ValueSum(BAG_SUBSCRIBER_BANK,1,bind_mode) or 0
	local craft = WE.SV.includecraftbag and WE.CraftBagSum(1,bind_mode) or 0
	local money = WE.SV.includebaggold and GetCurrencyAmount(CURT_MONEY) or 0
	local bank_money = WE.SV.includebankgold and GetCurrencyAmount(CURT_MONEY,CURRENCY_LOCATION_BANK) or 0
	local motif_knowledge = WE.SV.includemotifknowledge and WE.MotifKnowledgeCost(bind_mode,1) or 0
	local cook_knowledge = WE.SV.includecookknowledge and WE.RecipeKnowledgeCost(0,bind_mode,1) or 0
	local furn_knowledge = WE.SV.includefurnknowledge and WE.RecipeKnowledgeCost(1,bind_mode,1) or 0
	local house_cost =  WE.SV.includehousecost and WE.HouseCost(bind_mode) or 0
	local housebank = 0 --set later
	--Handle tel var value
	if tonumber(WE.SV.telvarval) == nil then
		WE.SV.telvarval = 0
	end	
	local telvar = WE.SV.includetelvar and WE.SV.telvarval*GetCurrencyAmount(CURT_TELVAR_STONES) or 0
	local bank_telvar = WE.SV.includebanktelvar and WE.SV.telvarval*GetCurrencyAmount(CURT_TELVAR_STONES,CURRENCY_LOCATION_BANK) or 0
	--Handle crowns value
	if tonumber(WE.SV.crownsval) == nil then
		WE.SV.crownsval = 0
	end	
	local crowns = WE.SV.includecrowns and WE.SV.crownsval*GetCurrencyAmount(CURT_CROWNS,CURRENCY_LOCATION_ACCOUNT) or 0
	
	--Handle AP value
	if tonumber(WE.SV.apval) == nil then
		WE.SV.apval = 0
	end		
	local ap = WE.SV.includeap and WE.SV.apval*GetCarriedCurrencyAmount(CURT_ALLIANCE_POINTS) or 0
	
	--Handle voucher value
	if tonumber(WE.SV.voucherval) == nil then
		WE.SV.voucherval = 0
	end		
	local voucher = WE.SV.includevoucher and WE.SV.voucherval*GetCarriedCurrencyAmount(CURT_WRIT_VOUCHERS) or 0	
	
	local bankspace_cost = 0
	if WE.SV.includebankspace then
		for bs=70,GetBagSize(BAG_BANK),10 do
			bankspace_cost = bankspace_cost+WE.bankspace[bs]
		end
	end
	
	local sum = 0
	
	local mode_text = "all"
	if bind_mode == 1 then
		mode_text = "bound"
	elseif bind_mode == 2 then
		mode_text = "unbound"
	end	
	CHAT_SYSTEM:AddMessage("Estimating " .. mode_text .. " wealth for this character...")
	
	if bind_mode == 1 then
		sum = worn+bag+bank+craft+motif_knowledge+furn_knowledge+cook_knowledge+house_cost
	--If bound it can't be in the guild store; money isn't bound
	else
		sum = worn+bag+bank+craft+money+bank_money+motif_knowledge+telvar+bank_telvar+ap+voucher+crowns+furn_knowledge+cook_knowledge
		--Handle guilds
		if WE.SV.includeguilds then
			for g = 1, GetNumGuilds(), 1 do
				if WE.guilds[g][2] > 0 then
					sum = sum + WE.guilds[g][2]
					CHAT_SYSTEM:AddMessage("Estimated listings value in " .. WE.guilds[g][1] .. ": " .. WE.FormatNum(WE.guilds[g][2]))
				end
			end
		end
		--Handle homes
		if WE.SV.includefurnval then
			for index,data in pairs(WE.houses) do
				if data[4] == 1 then
					sum = sum + data[3]
					CHAT_SYSTEM:AddMessage("Estimated furniture value in " .. data[1] .. ": " .. WE.FormatNum(data[3]))
				end	
			end
		end
	end	
	if WE.SV.includeworn then
		CHAT_SYSTEM:AddMessage("Estimated worn value: " .. WE.FormatNum(worn))
	end	
	if WE.SV.includebag then
		CHAT_SYSTEM:AddMessage("Estimated inventory value: " .. WE.FormatNum(bag))
	end	
	if WE.SV.includebank then
		CHAT_SYSTEM:AddMessage("Estimated bank value: " .. WE.FormatNum(bank))
	end	
	if WE.SV.includehousebank then
		housebank = HouseBankChoose(1,bind_mode)
		sum = sum+housebank
	end	
	if WE.SV.includecraftbag then
		CHAT_SYSTEM:AddMessage("Estimated craft bag value: " .. WE.FormatNum(craft))
	end	
	--Removes exclusively unbound
	if bind_mode ~= 1 then
		if WE.SV.includebaggold then
			CHAT_SYSTEM:AddMessage("Carried gold value: " .. WE.FormatNum(money))
		end	
		if WE.SV.includebankgold then
			CHAT_SYSTEM:AddMessage("Banked gold value: " .. WE.FormatNum(bank_money))
		end	
		if WE.SV.includetelvar then
			CHAT_SYSTEM:AddMessage("Carried Tel Var value: " .. WE.FormatNum(telvar))
		end	
		if WE.SV.includebanktelvar then
			CHAT_SYSTEM:AddMessage("Banked Tel Var value: " .. WE.FormatNum(bank_telvar))
		end	
		if WE.SV.includeap then
			CHAT_SYSTEM:AddMessage("Alliance Point value: " .. WE.FormatNum(ap))
		end	
		if WE.SV.includevoucher then
			CHAT_SYSTEM:AddMessage("Writ Voucher value: " .. WE.FormatNum(voucher))
		end	
		if WE.SV.includecrowns then
			CHAT_SYSTEM:AddMessage("Crowns value: " .. WE.FormatNum(crowns))
		end			
	end
	--Removes exclusively bound
	if bind_mode ~= 2 then
		if WE.SV.includemotifknowledge then
			CHAT_SYSTEM:AddMessage("Estimated motif knowledge value: " .. WE.FormatNum(motif_knowledge))
		end	
		if WE.SV.includecookknowledge then
			CHAT_SYSTEM:AddMessage("Estimated cooking knowledge value: " .. WE.FormatNum(cook_knowledge))
		end	
		if WE.SV.includefurnknowledge then
			CHAT_SYSTEM:AddMessage("Estimated furnishing knowledge value: " .. WE.FormatNum(furn_knowledge))
		end	
		if WE.SV.includehousecost then	
			CHAT_SYSTEM:AddMessage("Estimated cost of houses: " .. WE.FormatNum(house_cost))
		end
		if WE.SV.includebankspace then	
			CHAT_SYSTEM:AddMessage("Cost of bank upgrades: " .. WE.FormatNum(bankspace_cost))
		end		
	end
	CHAT_SYSTEM:AddMessage("|c00A000Estimated wealth: " .. WE.FormatNum(sum) .. "|r")
end

function WE.StolenSum(mode)
	local bag_size = tonumber(GetBagSize(mode))
	local sum_mm = 0
	local sum_vend = 0
	local stolen_count = 0
	for i = 0, bag_size, 1 do
		if IsItemStolen(mode,i) then
			sum_mm = sum_mm+WE.ItemPrice(GetItemLink(mode,i),1)*select(2,GetItemInfo(mode,i))
			sum_vend = sum_vend+GetItemSellValueWithBonuses(mode,i)*select(2,GetItemInfo(mode,i))
			stolen_count = stolen_count+1
		end
	end	
	if stolen_count > 0 then
		CHAT_SYSTEM:AddMessage("|caf0000You are " .. (mode == BAG_WORN and "wearing " or "carrying ") .. stolen_count .. " stolen item" .. (stolen_count == 1 and "" or "s") .. " worth " .. WE.FormatNum(sum_mm) .. " MM or " .. WE.FormatNum(sum_vend) .. " Vendor.|r")
	else
		CHAT_SYSTEM:AddMessage("You are not " .. (mode == BAG_WORN and "wearing" or "carrying") .. " any stolen items.")
	end	
end

local function StolenSums()
	WE.StolenSum(BAG_WORN)
	WE.StolenSum(BAG_BACKPACK)
end

--Allows differentiating between intentionally invoked
local function AutoStolenSums()
	if WE.Defaults.stolenwarning then
		StolenSums()
	end
end

--Generates the example
local function FakeSum()
CHAT_SYSTEM:AddMessage("Estimating all wealth for this character...")
CHAT_SYSTEM:AddMessage("Estimated listings value in Best Guild Ever: 44 558")
CHAT_SYSTEM:AddMessage("Estimated listings value in Argonian Maid House: 69 666")
CHAT_SYSTEM:AddMessage("Estimated listings value in Cats Aren't Evil: 23 378")
CHAT_SYSTEM:AddMessage("Estimated listings value in Yes They Are: 189 454")
CHAT_SYSTEM:AddMessage("Estimated listings value in Cicero's Oddities: 112 350")
CHAT_SYSTEM:AddMessage("Estimated furniture value in Serenity Falls Estate: 584 771")
CHAT_SYSTEM:AddMessage("Estimated worn value: 127 456")
CHAT_SYSTEM:AddMessage("Estimated inventory value: 87 123")
CHAT_SYSTEM:AddMessage("Estimated bank value: 141 105")
CHAT_SYSTEM:AddMessage("Estimated house bank (Storage Coffer, Oaken) value: 5 511")
CHAT_SYSTEM:AddMessage("Estimated craft bag value: 12 247 432")
CHAT_SYSTEM:AddMessage("Carried gold value: 289 449")
CHAT_SYSTEM:AddMessage("Banked gold value: 17 397 334")
CHAT_SYSTEM:AddMessage("Carried Tel Var value: 44 752")
CHAT_SYSTEM:AddMessage("Banked Tel Var value: 515 005")
CHAT_SYSTEM:AddMessage("Alliance Point value: 1 448 216")
CHAT_SYSTEM:AddMessage("Writ Voucher value: 338 185")
CHAT_SYSTEM:AddMessage("Crowns value: 400 000")
CHAT_SYSTEM:AddMessage("Estimated motif knowledge value: 2 142 117")
CHAT_SYSTEM:AddMessage("Estimated cooking knowledge value: 584 086")
CHAT_SYSTEM:AddMessage("Estimated furnishing knowledge value: 187 509")
CHAT_SYSTEM:AddMessage("Estimated cost of houses: 5 055 000")
CHAT_SYSTEM:AddMessage("Cost of bank upgrades: 768 500")
CHAT_SYSTEM:AddMessage("|c00A000Estimated wealth: 42 799 957|r")
end

--Sums guild listings while viewed
function WE.GuildListingSum()
	local listingCount = select(1,GetTradingHouseListingCounts())
	local listingSum = 0
	if listingCount ~= 0 and select(1,GetTradingHouseListingItemInfo(1)) ~= nil then
		for itemIndex = 1, listingCount, 1 do
			local itemSum = select(7,GetTradingHouseListingItemInfo(itemIndex))
			if itemSum ~= nil then
				listingSum = listingSum + itemSum
			end
		end
	end
	return listingSum
end

--Handles the different types of wealth calls

local function WealthAll()
	return WealthSum(0)
end

local function WealthBound()
	return WealthSum(1)
end

local function WealthUnbound()
	return WealthSum(2)
end

--Relies on saved vars to determine the default /wealth's path
local function WealthChoose()
	if WE.Defaults.includemode == "All" then
		return WealthAll()
	elseif WE.Defaults.includemode == "Bound" then
		return WealthBound()
	elseif WE.Defaults.includemode == "Unbound" then
		return WealthUnbound()
	end	
end

local function WEHelp()
	CHAT_SYSTEM:AddMessage("Wealth Evaluator Command Usage")
	CHAT_SYSTEM:AddMessage("NOTE: To include guild listings, view each of your listing pages individually for them to be added.")
	CHAT_SYSTEM:AddMessage("NOTE: Worn and Bag only count for this toon.")
	CHAT_SYSTEM:AddMessage("NOTE: Equipped (worn), Bag (inventory), Bank, Wealth have 3 commands each. One for all, one for bound only (add 'b'), one for unbound only (add 'ub').")
	--Wealth sum
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/wealthsum|r or |cFF7700/wealthsumb|r or |cFF7700/wealthsumub|r")
	CHAT_SYSTEM:AddMessage("Purpose: Sums things according to bind mode and your chosen settings.")
	--Worn sum
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/wornsum|r or |cFF7700/wornsumb|r or |cFF7700/wornsumub|r")
	CHAT_SYSTEM:AddMessage("Purpose: Sums the equipped gear of this toon.")
	--Bag sum
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/bagsum|r or |cFF7700/bagsumb|r or |cFF7700/bagsumub|r")
	CHAT_SYSTEM:AddMessage("Purpose: Sums the inventory of this toon (excluding money).")
	--Bank sum
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/banksum|r or |cFF7700/banksumb|r or |cFF7700/banksumub|r")
	CHAT_SYSTEM:AddMessage("Purpose: Sums the bank contents (excluding money).")
	--House bank sum
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/hbanksum|r or |cFF7700/hbanksumb|r or |cFF7700/hbanksumub|r")
	CHAT_SYSTEM:AddMessage("Purpose: Sums the house banks contents (excluding money).")	
	--Craftbag sum
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/craftsum|r")
	CHAT_SYSTEM:AddMessage("Purpose: Sums the craft bag contents.")
	--Motif knowledge sum
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/motifsum|r")
	CHAT_SYSTEM:AddMessage("Purpose: Sums the cost of your current motif knowledge.")
	--Recipe knowledge sum
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/recipesum|r")
	CHAT_SYSTEM:AddMessage("Purpose: Sums the cost of your current cooking and furnishing knowledge.")	
	--House sum
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/housesum|r")
	CHAT_SYSTEM:AddMessage("Purpose: Sums the cost of your homes you've entered.")	
	--Furniture sum
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/furnsum|r or |cFF7700/furnituresum|r")
	CHAT_SYSTEM:AddMessage("Purpose: Sums the value of the furniture in your homes that you've entered.")		
	--Stolen sum
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/stolensum|r")
	CHAT_SYSTEM:AddMessage("Purpose: Sums the stolen items you are wearing and carrying.")	
	--Worn dump
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/worndump|r")
	CHAT_SYSTEM:AddMessage("Purpose: Lists all currently equipped items.")	
	--Bag dump
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/bagdump|r")
	CHAT_SYSTEM:AddMessage("Purpose: Lists all currently carried items.")	
	--Bank dump
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/bankdump|r")
	CHAT_SYSTEM:AddMessage("Purpose: Lists basic bank slot items.")	
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/bankpdump|r")
	CHAT_SYSTEM:AddMessage("Purpose: Lists banked items in ESO+ slots.")
	--House bank dump
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/hbankdump #|r")
	CHAT_SYSTEM:AddMessage("Purpose: Lists house bank # items.")	
	--Options
	CHAT_SYSTEM:AddMessage("Command: |cFF7700/weoptions|r")
	CHAT_SYSTEM:AddMessage("Purpose: Opens the addon settings menu.")		
end

--Full item dumps
SLASH_COMMANDS["/hbankdump"] = HouseBankDump
SLASH_COMMANDS["/bankdump"] = BankDump
SLASH_COMMANDS["/bankpdump"] = BankPDump
SLASH_COMMANDS["/bagdump"] = BagDump
SLASH_COMMANDS["/worndump"] = WornDump

--Sum dumps
SLASH_COMMANDS["/wornsum"] = WornAll
SLASH_COMMANDS["/wornsumb"] = WornBound
SLASH_COMMANDS["/wornsumub"] = WornUnbound

SLASH_COMMANDS["/bagsum"] = BagAll
SLASH_COMMANDS["/bagsumb"] = BagBound
SLASH_COMMANDS["/bagsumub"] = BagUnbound

SLASH_COMMANDS["/banksum"] = BankAll
SLASH_COMMANDS["/banksumb"] = BankBound
SLASH_COMMANDS["/banksumub"] = BankUnbound

SLASH_COMMANDS["/hbanksum"] = HouseBankAll
SLASH_COMMANDS["/hbanksumb"] = HouseBankBound
SLASH_COMMANDS["/hbanksumub"] = HouseBankUnbound

SLASH_COMMANDS["/craftsum"] = WE.CraftBagSum
SLASH_COMMANDS["/stolensum"] = StolenSums
SLASH_COMMANDS["/motifsum"] = WE.MotifKnowledgeCost
SLASH_COMMANDS["/recipesum"] = RecipeChoose
SLASH_COMMANDS["/housesum"] = WE.HouseCost
SLASH_COMMANDS["/furnsum"] = WE.HouseFurnishingCost
SLASH_COMMANDS["/furnituresum"] = WE.HouseFurnishingCost

SLASH_COMMANDS["/wealth"] = WealthChoose
SLASH_COMMANDS["/wealthb"] = WealthBound
SLASH_COMMANDS["/wealthub"] = WealthUnbound

SLASH_COMMANDS["/wehelp"] = WEHelp

EVENT_MANAGER:RegisterForEvent(WE.Name, EVENT_OPEN_TRADING_HOUSE, GuildListingViewer)
EVENT_MANAGER:RegisterForEvent(WE.Name, EVENT_JUSTICE_BEING_ARRESTED, AutoStolenSums)
EVENT_MANAGER:RegisterForEvent(WE.Name, EVENT_ADD_ON_LOADED, OnAddOnLoaded)

--Menu
local panelData = {
    type = "panel",
    name = "Wealth Evaluator",
    displayName = "Wealth Evaluator",
    author = WE.Author,
    version = WE.Version,
    slashCommand = "/weoptions",
    registerForRefresh = true,
    registerForDefaults = true,
}

local optionsTable = {
	--Wealth options
    [1] = {
        type = "header",
        name = "/wealth Settings",
        width = "full",
    },
	[2] = {
        type = "dropdown",
        name = "Include Mode",
        tooltip = "Should bound be included?",
        choices = {"All", "Unbound", "Bound"},
        getFunc = function() return WE.SV.includemode end,
        setFunc = function(value) SettingsUpdate('includemode',value) end,
        width = "full",
	},
	[3] = {
	    type        = "checkbox", 
		name        = "Include Guilds",
		tooltip     = "Guild listings must be viewed to update data.",
		getFunc     = function() return WE.SV.includeguilds end, 
		setFunc     = function(value) SettingsUpdate('includeguilds',value) end, 
		default     = WE.Defaults.includeguilds, 
	},	
	[4] = {
	    type        = "checkbox", 
		name        = "Include Worn",
		tooltip     = "Only includes this character's gear.",
		getFunc     = function() return WE.SV.includeworn end, 
		setFunc     = function(value) SettingsUpdate('includeworn',value) end, 
		default     = WE.Defaults.includeworn, 
	},
	[5] = {
	    type        = "checkbox", 
		name        = "Include Inventory",
		tooltip     = "Only includes this character's inventory.",
		getFunc     = function() return WE.SV.includebag end, 
		setFunc     = function(value) SettingsUpdate('includebag',value) end, 
		default     = WE.Defaults.includebag, 
	},	
	[6] = {
	    type        = "checkbox", 
		name        = "Include Bank",
		tooltip     = "Include bank value in the evaluation.",
		getFunc     = function() return WE.SV.includebank end, 
		setFunc     = function(value) SettingsUpdate('includebank',value) end, 
		default     = WE.Defaults.includebank, 
	},		
	[7] = {
	    type        = "checkbox", 
		name        = "Include House Bank",
		tooltip     = "Include house banks value in the evaluation.",
		getFunc     = function() return WE.SV.includebank end, 
		setFunc     = function(value) SettingsUpdate('includehousebank',value) end, 
		default     = WE.Defaults.includehousebank, 
	},		
	[8] = {
	    type        = "checkbox", 
		name        = "Include Craft Bag",
		tooltip     = "Include craft bag value in evaluation.",
		getFunc     = function() return WE.SV.includecraftbag end, 
		setFunc     = function(value) SettingsUpdate('includecraftbag',value) end, 
		default     = WE.Defaults.includecraftbag, 
	},
	[9] = {
	    type        = "checkbox", 
		name        = "Include Carried Gold",
		tooltip     = "Only includes this character's gold.",
		getFunc     = function() return WE.SV.includebaggold end, 
		setFunc     = function(value) SettingsUpdate('includebaggold',value) end, 
		default     = WE.Defaults.includebaggold, 
	},			
	[10] = {
	    type        = "checkbox", 
		name        = "Include Banked Gold",
		tooltip     = "Include banked gold value in evaluation.",
		getFunc     = function() return WE.SV.includebankgold end, 
		setFunc     = function(value) SettingsUpdate('includebankgold',value) end, 
		default     = WE.Defaults.includebankgold, 
	},			
	[11] = {
	    type        = "checkbox", 
		name        = "Include Carried Tel Var",
		tooltip     = "Includes a user-defined value for Tel Var Stones.",
		getFunc     = function() return WE.SV.includetelvar end, 
		setFunc     = function(value) SettingsUpdate('includetelvar',value) end, 
		default     = WE.Defaults.includetelvar, 
	},	
	[12] = {
	    type        = "checkbox", 
		name        = "Include Banked Tel Var",
		tooltip     = "Includes a user-defined value for banked Tel Var Stones.",
		getFunc     = function() return WE.SV.includebanktelvar end, 
		setFunc     = function(value) SettingsUpdate('includebanktelvar',value) end, 
		default     = WE.Defaults.includebanktelvar, 
	},	
	[13] = {
	    type        = "checkbox", 
		name        = "Include Alliance Points",
		tooltip     = "Includes a user-defined value for Alliance Points.",
		getFunc     = function() return WE.SV.includeap end, 
		setFunc     = function(value) SettingsUpdate('includeap',value) end, 
		default     = WE.Defaults.includeap, 
	},	
	[14] = {
	    type        = "checkbox", 
		name        = "Include Writ Vouchers",
		tooltip     = "Includes a user-defined value for Writ Vouchers.",
		getFunc     = function() return WE.SV.includevoucher end, 
		setFunc     = function(value) SettingsUpdate('includevoucher',value) end, 
		default     = WE.Defaults.includevoucher, 
	},	
	[15] = {
	    type        = "checkbox", 
		name        = "Include Crowns",
		tooltip     = "Includes a user-defined value for Crowns.",
		getFunc     = function() return WE.SV.includecrowns end, 
		setFunc     = function(value) SettingsUpdate('includecrowns',value) end, 
		default     = WE.Defaults.includecrowns, 
	},		
	[16] = {
	    type        = "checkbox", 
		name        = "Include Motif Knowledge",
		tooltip     = "Include the cost of this character's motif knowledge.",
		getFunc     = function() return WE.SV.includemotifknowledge end, 
		setFunc     = function(value) SettingsUpdate('includemotifknowledge',value) end, 
		default     = WE.Defaults.includemotifknowledge, 
	},
	[17] = {
	    type        = "checkbox", 
		name        = "Include Cooking Knowledge",
		tooltip     = "Include the cost of this character's cooking recipe knowledge.",
		getFunc     = function() return WE.SV.includecookknowledge end, 
		setFunc     = function(value) SettingsUpdate('includecookknowledge',value) end, 
		default     = WE.Defaults.includecookknowledge, 
	},	
	[18] = {
	    type        = "checkbox", 
		name        = "Include Furnishing Knowledge",
		tooltip     = "Include the cost of this character's furnishing recipe knowledge.",
		getFunc     = function() return WE.SV.includefurnknowledge end, 
		setFunc     = function(value) SettingsUpdate('includefurnknowledge',value) end, 
		default     = WE.Defaults.includefurnknowledge, 
	},
	[19] = {
	    type        = "checkbox", 
		name        = "Include House Cost",
		tooltip     = "Includes the cost of homes you own and have entered.",
		getFunc     = function() return WE.SV.includehousecost end, 
		setFunc     = function(value) SettingsUpdate('includehousecost',value) end, 
		default     = WE.Defaults.includehousecost, 
	},
	[20] = {
	    type        = "checkbox", 
		name        = "Include In-Home Furniture",
		tooltip     = "Enter your home, use /furnsum. Must be used in each home.",
		getFunc     = function() return WE.SV.includefurnval end, 
		setFunc     = function(value) SettingsUpdate('includefurnval',value) end, 
		default     = WE.Defaults.includefurnval, 
	},	
	[21] = {
	    type        = "checkbox", 
		name        = "Include Bank Space",
		tooltip     = "Include the cost of upgrading bank space.",
		getFunc     = function() return WE.SV.includebankspace end, 
		setFunc     = function(value) SettingsUpdate('includebankspace',value) end, 
		default     = WE.Defaults.includebankspace, 
	},		
	--Misc
    [22] = {
        type = "header",
        name = "Misc Settings",
        width = "full",
    },
	[23] = {
	    type        = "checkbox", 
		name        = "Automatic Furniture Sum",
		tooltip     = "Your furniture sum will be updated and displayed on house entry.",
		getFunc     = function() return WE.SV.autofurnituresum end, 
		setFunc     = function(value) SettingsUpdate('autofurnituresum',value) end, 
		default     = WE.Defaults.autofurnituresum 
	},		
	[24] = {
	    type        = "checkbox", 
		name        = "Stolen Warning",
		tooltip     = "A chat message will warn you of your carried stolen wealth when accosted.",
		getFunc     = function() return WE.SV.stolenwarning end, 
		setFunc     = function(value) SettingsUpdate('stolenwarning',value) end, 
		default     = WE.Defaults.stolenwarning, 
	},
	[25] = {
	    type        = "checkbox", 
		name        = "Unknown Warning",
		tooltip     = "Items lacking MM on non-/wealth output this failure.",
		getFunc     = function() return WE.SV.unknownwarning end, 
		setFunc     = function(value) SettingsUpdate('unknownwarning',value) end, 
		default     = WE.Defaults.unknownwarning, 
	},	
	[26] = {
		type = "editbox",
		name = "Tel Var Value",
		tooltip = "Set a value for Tel Var Stones.",
		getFunc = function() return WE.SV.telvarval end,
		setFunc = function(value) SettingsUpdate('telvarval',value) end, 
		isMultiline = false,
		width = "full",
		default = WE.Defaults.telvarval,
	},		
	[27] = {
		type = "editbox",
		name = "Alliance Point Value",
		tooltip = "Set a value for Alliance Points.",
		getFunc = function() return WE.SV.apval end,
		setFunc = function(value) SettingsUpdate('apval',value) end, 
		isMultiline = false,
		width = "full",
		default = WE.Defaults.apval,
	},	
	[28] = {
		type = "editbox",
		name = "Writ Voucher Value",
		tooltip = "Set a value for Writ Vouchers.",
		getFunc = function() return WE.SV.voucherval end,
		setFunc = function(value) SettingsUpdate('voucherval',value) end, 
		isMultiline = false,
		width = "full",
		default = WE.Defaults.voucherval,
	},
	[29] = {
		type = "editbox",
		name = "Crown Value",
		tooltip = "Set a value for Crowns.",
		getFunc = function() return WE.SV.crownsval end,
		setFunc = function(value) SettingsUpdate('crownsval',value) end, 
		isMultiline = false,
		width = "full",
		default = WE.Defaults.crownsval,
	},		
}

function WE:Initialize()
	WE.SV = ZO_SavedVars:NewAccountWide("WealthEvaluatorVars", WE.SettingsVersion, nil, WE.Defaults)
	LAM:RegisterAddonPanel(WE.Name, panelData)
	LAM:RegisterOptionControls(WE.Name, optionsTable)	
	EVENT_MANAGER:RegisterForEvent(WE.Name,EVENT_PLAYER_ACTIVATED,AutoFurnitureSum)
	EVENT_MANAGER:UnregisterForEvent(WE.Name, EVENT_ADD_ON_LOADED)
	--Update the current houses table with saved data
	for index,data in pairs(WE.SV.homes) do
		if data[1] == 1 then
			WE.houses[index][3] = data[2]
			WE.houses[index][4] = 1 
		end	
	end
end